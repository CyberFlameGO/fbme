package smvDebugger.panel.items;

/*Generated by MPS */

import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JLabel;
import smvDebugger.model.Counterexample;
import java.awt.Dimension;
import java.awt.FlowLayout;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerListModel;
import javax.swing.event.ChangeListener;

public class StateChanger extends JPanel {
  private static final int CHANGER_WIDTH = 300;
  private static final int CHANGER_HEIGHT = 70;
  private static final String STEP_LABEL_NAME = "Current step:";
  private static final String TIME_LABEL_NAME = "Current time:";
  private static final String CONDITION_LABEL_NAME = "Condition";

  public final JSpinner stepSpinner;
  public final JSpinner conditionSpinner;
  public final JLabel timeValueLabel;

  public StateChanger(final Counterexample counterexample) {
    setPreferredSize(new Dimension(CHANGER_WIDTH, CHANGER_HEIGHT));
    setLayout(new FlowLayout(FlowLayout.LEFT));

    final JLabel stepLabel = new JLabel(STEP_LABEL_NAME);
    final SpinnerModel spinnerModel = new SpinnerListModel(counterexample.???());
    stepSpinner = new HorizontalSpinner(10);
    stepSpinner.setModel(spinnerModel);

    final JLabel timeLabel = new JLabel(TIME_LABEL_NAME);
    timeValueLabel = new JLabel();

    final JLabel space = new JLabel();
    space.setPreferredSize(new Dimension(30, 10));

    add(stepLabel);
    add(stepSpinner);
    add(space);
    add(timeLabel);
    add(timeValueLabel);

    final JLabel spaceJLabel = new JLabel();
    spaceJLabel.setPreferredSize(new Dimension(150, 10));
    add(spaceJLabel);

    conditionSpinner = new HorizontalSpinner(16);
    add(new JLabel(CONDITION_LABEL_NAME));
    add(conditionSpinner);
  }

  public void addStepListener(final ChangeListener changeListener) {
    stepSpinner.addChangeListener(changeListener);
  }

  public void addConditionListener(final ChangeListener changeListener) {
    conditionSpinner.addChangeListener(changeListener);
  }

  public void setTime(final String value) {
    timeValueLabel.setText(value);
  }
}
