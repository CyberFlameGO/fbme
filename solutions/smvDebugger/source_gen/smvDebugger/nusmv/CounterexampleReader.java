package smvDebugger.nusmv;

/*Generated by MPS */

import java.nio.file.Path;
import java.util.List;
import java.nio.file.Files;
import java.io.IOException;
import java.util.Arrays;
import java.util.Comparator;
import java.util.function.Function;

public class CounterexampleReader {
  private static final String STATE_TRASH_SYMBOLS = "-1[.]";
  public static final String DATA_DELIMITER = ",";

  public static Counterexample readCSV(final Path csvPath) {
    final List<String> lines;
    try {
      lines = Files.readAllLines(csvPath);
    } catch (final IOException ignored) {
      return null;
    }

    String[] states = lines.get(0).replaceAll(STATE_TRASH_SYMBOLS, "").split(DATA_DELIMITER);
    states = Arrays.copyOfRange(states, 1, states.length);

    final VariableData[] vars = new VariableData[lines.size() - 1];
    for (int i = 1; i < lines.size(); i++) {
      final String[] lineData = lines.get(i).split(DATA_DELIMITER);
      final String fullName = lineData[0];
      final String[] values = Arrays.copyOfRange(lineData, 1, lineData.length);
      vars[i - 1] = new VariableData(fullName, values);
    }

    Arrays.sort(vars, Comparator.comparing(new Function<VariableData, String>() {
      public String apply(final VariableData var) {
        return var.fullName();
      }
    }));

    return new Counterexample(states, vars);
  }
}
