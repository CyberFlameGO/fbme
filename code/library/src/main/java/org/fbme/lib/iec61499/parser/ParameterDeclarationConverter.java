package org.fbme.lib.iec61499.parser;

/*Generated by MPS */

import org.fbme.lib.iec61499.declarations.ParameterDeclaration;
import org.jetbrains.annotations.Nullable;
import org.fbme.lib.common.Identifier;
import java.util.List;
import org.jdom.Element;

public class ParameterDeclarationConverter extends DeclarationConverterBase<ParameterDeclaration> {

  public ParameterDeclarationConverter(ConverterArguments arguments) {
    super(arguments);
  }

  @Override
  protected ParameterDeclaration extractDeclarationBody(@Nullable Identifier identifier) {
    assert myElement != null;

    ParameterDeclaration parameter = myFactory.createParameterDeclaration(identifier);
    parameter.setType(STConverter.parseType(myStFactory, myElement.getAttributeValue("Type")));
    return parameter;
  }

  public static void extractAll(ConverterArguments arguments, List<ParameterDeclaration> declarations) {
    Element element = arguments.getElement();
    if (element == null) {
      return;
    }
    List<Element> varElements = element.getChildren("VarDeclaration");
    for (Element varElement : varElements) {
      declarations.add(new ParameterDeclarationConverter(arguments.with(varElement)).extract());
    }
  }
}
