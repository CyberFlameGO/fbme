
public class SystemItemParser {

  private static final string FULL_NAME_DELIMITER = "[.]";

  private static final string EVENT_PORT_DELIMITER = "_";

  private static final string TIME_EVENT_PORT_VALUE = "value";

  private static final string EVENT_PORT_KEY_FEATURE = "event";

  private static final string ECC_KEY_FEATURE = "Q_smv";

  private static final string ECC_ITEM_NAME = "ECC";

  public SystemItem parse(final string fullName) {
    final string[] nameParts = fullName.split(FULL_NAME_DELIMITER);

    final SystemItemType type;
    if (isEventPort(nameParts)) {
      type = SystemItemType.EVENT_PORT;
    } else if (isDataPort(nameParts)) {
      type = SystemItemType.DATA_PORT;
    } else if (isECC(nameParts)) {
      type = SystemItemType.ECC;
    } else {
      return null;
    }

    final string[] fbNames = getFbNames(nameParts);
    if (fbNames.length == 0) { return null; }

    final string itemName = getItemName(nameParts, type);
    return new SystemItem(fullName, fbNames, itemName, type);
  }

  private boolean isEventPort(final string[] nameParts) {
    return isPort(nameParts) && nameParts[nameParts.length - 1].contains(EVENT_PORT_KEY_FEATURE);
  }

  private boolean isDataPort(final string[] nameParts) {
    return isPort(nameParts) && !(isEventPort(nameParts));
  }

  private boolean isECC(final string[] nameParts) {
    return nameParts[nameParts.length - 1] :eq: ECC_KEY_FEATURE;
  }

  private boolean isPort(final string[] nameParts) {
    return nameParts.length > 1 && !isECC(nameParts);
  }

  private string[] getFbNames(final string[] nameParts) {
    return ArrayUtils.subarray(nameParts, 1, nameParts.length - 1);
  }

  private string getItemName(final string[] nameParts, final SystemItemType type) {
    switch (type) {
      case SystemItemType.EVENT_PORT :
        return nameParts[nameParts.length - 1].split(EVENT_PORT_DELIMITER)[1];
      case SystemItemType.DATA_PORT :
        return nameParts[nameParts.length - 1];
      case SystemItemType.ECC :
        return ECC_ITEM_NAME;
      default :
        return null;
    }
  }
}